/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../types/Context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  CheckoutCalculateInput: { // input type
    id?: string | null; // String
    orders?: NexusGenInputs['CreateOrderInput'][] | null; // [CreateOrderInput!]
  }
  CreateAddOnInput: { // input type
    id?: string | null; // String
    isRequired: boolean; // Boolean!
    items: NexusGenInputs['CreateItemInput'][]; // [CreateItemInput!]!
    name: string; // String!
  }
  CreateFoodInput: { // input type
    addOns?: NexusGenInputs['CreateAddOnInput'][] | null; // [CreateAddOnInput!]
    category: string; // String!
    description?: string | null; // String
    id?: string | null; // String
    image?: string | null; // String
    name: string; // String!
    price?: number | null; // Float
    sizes?: NexusGenInputs['CreateFoodSizeInput'][] | null; // [CreateFoodSizeInput!]
  }
  CreateFoodSizeInput: { // input type
    addOns: NexusGenInputs['CreateAddOnInput'][]; // [CreateAddOnInput!]!
    id?: string | null; // String
    name: string; // String!
    price: number; // Float!
  }
  CreateItemInput: { // input type
    id?: string | null; // String
    itemSizes?: NexusGenInputs['ItemSizeInput'][] | null; // [ItemSizeInput!]
    name: string; // String!
    price: number; // Float!
  }
  CreateOrderInput: { // input type
    foodId: string; // String!
    id?: string | null; // String
    itemIds: Array<string | null>; // [String]!
    quantity: number; // Int!
  }
  CreateOrderItemInput: { // input type
    foodId: string; // String!
    id?: string | null; // String
    items: string[]; // [String!]!
  }
  ItemSizeInput: { // input type
    default?: boolean | null; // Boolean
    id?: string | null; // String
    name: string; // String!
    price: number; // Float!
  }
  ShoppingCartInput: { // input type
    foodId: string; // String!
    foodSizeId?: string | null; // String
    items: Array<NexusGenInputs['ShoppingCartItemInput'] | null>; // [ShoppingCartItemInput]!
    orderItemId: string; // String!
    quantity: number; // Int!
  }
  ShoppingCartItemInput: { // input type
    itemId: string; // String!
    itemSizeId?: string | null; // String
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  AddOn: { // root type
    foods?: Array<NexusGenRootTypes['Food'] | null> | null; // [Food]
    id?: string | null; // String
    isRequired?: boolean | null; // Boolean
    items?: Array<NexusGenRootTypes['Item'] | null> | null; // [Item]
    name?: string | null; // String
  }
  Checkout: { // root type
    clientSecret?: string | null; // String
    id?: string | null; // String
    total?: number | null; // Float
  }
  Food: { // root type
    addOns?: Array<NexusGenRootTypes['AddOn'] | null> | null; // [AddOn]
    description?: string | null; // String
    id?: string | null; // String
    image?: string | null; // String
    name?: string | null; // String
    price?: number | null; // Float
    sizes?: Array<NexusGenRootTypes['FoodSize'] | null> | null; // [FoodSize]
  }
  FoodSize: { // root type
    addOns?: Array<NexusGenRootTypes['AddOn'] | null> | null; // [AddOn]
    id?: string | null; // String
    name?: string | null; // String
    price?: number | null; // Float
  }
  FoodsByCategory: { // root type
    category: string; // String!
    foods?: NexusGenRootTypes['SimpleFood'][] | null; // [SimpleFood!]
  }
  Item: { // root type
    addOns?: Array<NexusGenRootTypes['AddOn'] | null> | null; // [AddOn]
    id?: string | null; // String
    itemSizes?: Array<NexusGenRootTypes['ItemSize'] | null> | null; // [ItemSize]
    name?: string | null; // String
    price?: number | null; // Float
  }
  ItemSize: { // root type
    default?: boolean | null; // Boolean
    id?: string | null; // String
    name?: string | null; // String
    price?: number | null; // Float
  }
  Mutation: {};
  Order: { // root type
    id?: string | null; // String
    orderItems?: Array<NexusGenRootTypes['OrderItem'] | null> | null; // [OrderItem]
    total?: number | null; // Float
  }
  OrderItem: { // root type
    food?: NexusGenRootTypes['Food'] | null; // Food
    id?: string | null; // String
    items?: Array<NexusGenRootTypes['Item'] | null> | null; // [Item]
  }
  Query: {};
  SelectedItem: { // root type
    id: string; // String!
    name?: string | null; // String
    price?: number | null; // Float
    selectedItemSize?: NexusGenRootTypes['ItemSize'] | null; // ItemSize
  }
  ShoppingCart: { // root type
    grandTotal: number; // Float!
    shoppingCartItems: Array<NexusGenRootTypes['ShoppingCartItem'] | null>; // [ShoppingCartItem]!
  }
  ShoppingCartItem: { // root type
    food?: NexusGenRootTypes['SimpleFood'] | null; // SimpleFood
    foodSize?: NexusGenRootTypes['FoodSize'] | null; // FoodSize
    orderItemId: string; // String!
    price: number; // Float!
    selectedItems?: Array<NexusGenRootTypes['SelectedItem'] | null> | null; // [SelectedItem]
  }
  SimpleFood: { // root type
    description?: string | null; // String
    id?: string | null; // String
    image?: string | null; // String
    name?: string | null; // String
    price?: number | null; // Float
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  AddOn: { // field return type
    foods: Array<NexusGenRootTypes['Food'] | null> | null; // [Food]
    id: string | null; // String
    isRequired: boolean | null; // Boolean
    items: Array<NexusGenRootTypes['Item'] | null> | null; // [Item]
    name: string | null; // String
  }
  Checkout: { // field return type
    clientSecret: string | null; // String
    id: string | null; // String
    total: number | null; // Float
  }
  Food: { // field return type
    addOns: Array<NexusGenRootTypes['AddOn'] | null> | null; // [AddOn]
    description: string | null; // String
    id: string | null; // String
    image: string | null; // String
    name: string | null; // String
    price: number | null; // Float
    sizes: Array<NexusGenRootTypes['FoodSize'] | null> | null; // [FoodSize]
  }
  FoodSize: { // field return type
    addOns: Array<NexusGenRootTypes['AddOn'] | null> | null; // [AddOn]
    id: string | null; // String
    name: string | null; // String
    price: number | null; // Float
  }
  FoodsByCategory: { // field return type
    category: string; // String!
    foods: NexusGenRootTypes['SimpleFood'][] | null; // [SimpleFood!]
  }
  Item: { // field return type
    addOns: Array<NexusGenRootTypes['AddOn'] | null> | null; // [AddOn]
    id: string | null; // String
    itemSizes: Array<NexusGenRootTypes['ItemSize'] | null> | null; // [ItemSize]
    name: string | null; // String
    price: number | null; // Float
  }
  ItemSize: { // field return type
    default: boolean | null; // Boolean
    id: string | null; // String
    name: string | null; // String
    price: number | null; // Float
  }
  Mutation: { // field return type
    CheckoutCalculateMut: NexusGenRootTypes['Checkout']; // Checkout!
    createFood: NexusGenRootTypes['Food']; // Food!
    createOrder: NexusGenRootTypes['Order']; // Order!
  }
  Order: { // field return type
    id: string | null; // String
    orderItems: Array<NexusGenRootTypes['OrderItem'] | null> | null; // [OrderItem]
    total: number | null; // Float
  }
  OrderItem: { // field return type
    food: NexusGenRootTypes['Food'] | null; // Food
    id: string | null; // String
    items: Array<NexusGenRootTypes['Item'] | null> | null; // [Item]
  }
  Query: { // field return type
    addOns: Array<NexusGenRootTypes['AddOn'] | null>; // [AddOn]!
    foodById: NexusGenRootTypes['Food'] | null; // Food
    foods: Array<NexusGenRootTypes['Food'] | null>; // [Food]!
    foodsByCategory: Array<NexusGenRootTypes['FoodsByCategory'] | null>; // [FoodsByCategory]!
    validateShoppingCart: NexusGenRootTypes['ShoppingCart']; // ShoppingCart!
  }
  SelectedItem: { // field return type
    id: string; // String!
    name: string | null; // String
    price: number | null; // Float
    selectedItemSize: NexusGenRootTypes['ItemSize'] | null; // ItemSize
  }
  ShoppingCart: { // field return type
    grandTotal: number; // Float!
    shoppingCartItems: Array<NexusGenRootTypes['ShoppingCartItem'] | null>; // [ShoppingCartItem]!
  }
  ShoppingCartItem: { // field return type
    food: NexusGenRootTypes['SimpleFood'] | null; // SimpleFood
    foodSize: NexusGenRootTypes['FoodSize'] | null; // FoodSize
    orderItemId: string; // String!
    price: number; // Float!
    selectedItems: Array<NexusGenRootTypes['SelectedItem'] | null> | null; // [SelectedItem]
  }
  SimpleFood: { // field return type
    description: string | null; // String
    id: string | null; // String
    image: string | null; // String
    name: string | null; // String
    price: number | null; // Float
  }
}

export interface NexusGenFieldTypeNames {
  AddOn: { // field return type name
    foods: 'Food'
    id: 'String'
    isRequired: 'Boolean'
    items: 'Item'
    name: 'String'
  }
  Checkout: { // field return type name
    clientSecret: 'String'
    id: 'String'
    total: 'Float'
  }
  Food: { // field return type name
    addOns: 'AddOn'
    description: 'String'
    id: 'String'
    image: 'String'
    name: 'String'
    price: 'Float'
    sizes: 'FoodSize'
  }
  FoodSize: { // field return type name
    addOns: 'AddOn'
    id: 'String'
    name: 'String'
    price: 'Float'
  }
  FoodsByCategory: { // field return type name
    category: 'String'
    foods: 'SimpleFood'
  }
  Item: { // field return type name
    addOns: 'AddOn'
    id: 'String'
    itemSizes: 'ItemSize'
    name: 'String'
    price: 'Float'
  }
  ItemSize: { // field return type name
    default: 'Boolean'
    id: 'String'
    name: 'String'
    price: 'Float'
  }
  Mutation: { // field return type name
    CheckoutCalculateMut: 'Checkout'
    createFood: 'Food'
    createOrder: 'Order'
  }
  Order: { // field return type name
    id: 'String'
    orderItems: 'OrderItem'
    total: 'Float'
  }
  OrderItem: { // field return type name
    food: 'Food'
    id: 'String'
    items: 'Item'
  }
  Query: { // field return type name
    addOns: 'AddOn'
    foodById: 'Food'
    foods: 'Food'
    foodsByCategory: 'FoodsByCategory'
    validateShoppingCart: 'ShoppingCart'
  }
  SelectedItem: { // field return type name
    id: 'String'
    name: 'String'
    price: 'Float'
    selectedItemSize: 'ItemSize'
  }
  ShoppingCart: { // field return type name
    grandTotal: 'Float'
    shoppingCartItems: 'ShoppingCartItem'
  }
  ShoppingCartItem: { // field return type name
    food: 'SimpleFood'
    foodSize: 'FoodSize'
    orderItemId: 'String'
    price: 'Float'
    selectedItems: 'SelectedItem'
  }
  SimpleFood: { // field return type name
    description: 'String'
    id: 'String'
    image: 'String'
    name: 'String'
    price: 'Float'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    CheckoutCalculateMut: { // args
      input: NexusGenInputs['CheckoutCalculateInput']; // CheckoutCalculateInput!
    }
    createFood: { // args
      input: NexusGenInputs['CreateFoodInput']; // CreateFoodInput!
    }
    createOrder: { // args
      input: NexusGenInputs['CreateOrderInput']; // CreateOrderInput!
    }
  }
  Query: {
    foodById: { // args
      id: string; // String!
    }
    validateShoppingCart: { // args
      input: Array<NexusGenInputs['ShoppingCartInput'] | null>; // [ShoppingCartInput]!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}